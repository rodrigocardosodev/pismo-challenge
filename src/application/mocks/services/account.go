// Code generated by MockGen. DO NOT EDIT.
// Source: src/application/services/account.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rodrigocardosodev/pismo-challenge/src/application/models"
)

// MockIAccountService is a mock of IAccountService interface.
type MockIAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountServiceMockRecorder
}

// MockIAccountServiceMockRecorder is the mock recorder for MockIAccountService.
type MockIAccountServiceMockRecorder struct {
	mock *MockIAccountService
}

// NewMockIAccountService creates a new mock instance.
func NewMockIAccountService(ctrl *gomock.Controller) *MockIAccountService {
	mock := &MockIAccountService{ctrl: ctrl}
	mock.recorder = &MockIAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccountService) EXPECT() *MockIAccountServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIAccountService) Create(ctx context.Context, documentNumber string) (models.AccountInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, documentNumber)
	ret0, _ := ret[0].(models.AccountInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIAccountServiceMockRecorder) Create(ctx, documentNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIAccountService)(nil).Create), ctx, documentNumber)
}

// GetAccountBalance mocks base method.
func (m *MockIAccountService) GetAccountBalance(ctx context.Context, accountID int64) (models.AccountInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountBalance", ctx, accountID)
	ret0, _ := ret[0].(models.AccountInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountBalance indicates an expected call of GetAccountBalance.
func (mr *MockIAccountServiceMockRecorder) GetAccountBalance(ctx, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountBalance", reflect.TypeOf((*MockIAccountService)(nil).GetAccountBalance), ctx, accountID)
}

// GetByID mocks base method.
func (m *MockIAccountService) GetByID(ctx context.Context, id int64) (models.AccountInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(models.AccountInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIAccountServiceMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIAccountService)(nil).GetByID), ctx, id)
}
