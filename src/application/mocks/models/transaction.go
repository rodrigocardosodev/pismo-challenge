// Code generated by MockGen. DO NOT EDIT.
// Source: src/application/models/transaction.go

// Package mock_models is a generated GoMock package.
package mock_models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionInterface is a mock of TransactionInterface interface.
type MockTransactionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionInterfaceMockRecorder
}

// MockTransactionInterfaceMockRecorder is the mock recorder for MockTransactionInterface.
type MockTransactionInterfaceMockRecorder struct {
	mock *MockTransactionInterface
}

// NewMockTransactionInterface creates a new mock instance.
func NewMockTransactionInterface(ctrl *gomock.Controller) *MockTransactionInterface {
	mock := &MockTransactionInterface{ctrl: ctrl}
	mock.recorder = &MockTransactionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionInterface) EXPECT() *MockTransactionInterfaceMockRecorder {
	return m.recorder
}

// GetAmount mocks base method.
func (m *MockTransactionInterface) GetAmount() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAmount")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetAmount indicates an expected call of GetAmount.
func (mr *MockTransactionInterfaceMockRecorder) GetAmount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAmount", reflect.TypeOf((*MockTransactionInterface)(nil).GetAmount))
}

// GetID mocks base method.
func (m *MockTransactionInterface) GetID() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockTransactionInterfaceMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockTransactionInterface)(nil).GetID))
}

// IsValid mocks base method.
func (m *MockTransactionInterface) IsValid() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValid")
	ret0, _ := ret[0].(error)
	return ret0
}

// IsValid indicates an expected call of IsValid.
func (mr *MockTransactionInterfaceMockRecorder) IsValid() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValid", reflect.TypeOf((*MockTransactionInterface)(nil).IsValid))
}

// SetAmount mocks base method.
func (m *MockTransactionInterface) SetAmount(arg0 int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetAmount", arg0)
}

// SetAmount indicates an expected call of SetAmount.
func (mr *MockTransactionInterfaceMockRecorder) SetAmount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAmount", reflect.TypeOf((*MockTransactionInterface)(nil).SetAmount), arg0)
}

// SetID mocks base method.
func (m *MockTransactionInterface) SetID(arg0 int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetID", arg0)
}

// SetID indicates an expected call of SetID.
func (mr *MockTransactionInterfaceMockRecorder) SetID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetID", reflect.TypeOf((*MockTransactionInterface)(nil).SetID), arg0)
}
